{
    "swagger": "2.0",
    "info": {
        "description": "API for managing AI scoring sessions and answers using chi and net/http.",
        "title": "AI Agent API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/add-answer": {
            "post": {
                "description": "Adds an answer to the user's session data in Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "answer"
                ],
                "summary": "Add an answer to the user session",
                "parameters": [
                    {
                        "description": "Answer payload",
                        "name": "answer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AnswerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserData"
                        }
                    },
                    "400": {
                        "description": "Invalid Json or Error getting user session",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error marshalling or saving updated user data",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/score": {
            "post": {
                "description": "Returns an AI-generated score for the user's session data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "score"
                ],
                "summary": "Get AI score for a user session",
                "parameters": [
                    {
                        "description": "User ID",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ScoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ScoreResponse"
                        }
                    },
                    "400": {
                        "description": "not found id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to marshal response",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/start-session": {
            "post": {
                "description": "Initializes a new session for the user in Redis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "Start a new user session",
                "parameters": [
                    {
                        "description": "User ID payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.StartSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Session started",
                        "schema": {
                            "$ref": "#/definitions/handlers.StartSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid user_id",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ScoreRequest": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "handlers.ScoreResponse": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string",
                    "example": "You performed well!"
                }
            }
        },
        "handlers.StartSessionRequest": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "handlers.StartSessionResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "false"
                },
                "success": {
                    "type": "string",
                    "example": "true"
                }
            }
        },
        "models.Answer": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                }
            }
        },
        "models.AnswerRequest": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "part": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Part": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Answer"
                    }
                },
                "number": {
                    "type": "integer"
                }
            }
        },
        "models.UserData": {
            "type": "object",
            "properties": {
                "part": {
                    "description": "UserID int    `json:\"user_id\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Part"
                    }
                }
            }
        }
    }
}